{
  "always_run_in_app" : false,
  "icon" : {
    "color" : "deep-brown",
    "glyph" : "magic"
  },
  "name" : "绿源电动车（手动配置）",
  "script" : "const FILE_NAME = \"luyuan_config.json\";\nconst FILE_PATH = FileManager.iCloud().joinPath(FileManager.iCloud().documentsDirectory(), FILE_NAME);\n\nasync function getUserConfig() {\n  const fm = FileManager.iCloud();\n  if (!fm.fileExists(FILE_PATH)) {\n    const alert = new Alert();\n    alert.title = \"首次运行 - 请输入车辆配置\";\n    alert.message = `请输入 JSON 配置（包含 code16 和请求头 headers）和理论满电续航(km)，示例格式：\n{\n  \"code16\": \"你的车辆code16字符串\",\n  \"headers\": {\n    \"Host\": \"intelligence.luyuan.cn\",\n    \"api-sign\": \"你的api-sign\",\n    \"mocktoken\": \"你的mocktoken\",\n    \"Accept\": \"*\/*\",\n    \"Cookie\": \"你的Cookie\",\n    \"Connection\": \"keep-alive\",\n    \"api-key\": \"你的api-key\",\n    \"User-Agent\": \"你的User-Agent\",\n    \"Accept-Language\": \"zh-Hans-CN;q=1, en-CN;q=0.9\",\n    \"apptoken\": \"你的apptoken\",\n    \"Accept-Encoding\": \"gzip, deflate, br\"\n  },\n  \"fullRangeKm\": 60\n}`;\n    alert.addTextField(\"JSON 配置\");\n    alert.addAction(\"保存\");\n    await alert.present();\n\n    const jsonInput = alert.textFieldValue(0);\n    const fullRangeInput = alert.textFieldValue(1);\n\n    try {\n      const parsed = JSON.parse(jsonInput);\n      let fullRangeKm = parseInt(fullRangeInput);\n      if (isNaN(fullRangeKm) || fullRangeKm <= 0) fullRangeKm = 60;\n\n      parsed.fullRangeKm = fullRangeKm;\n      fm.writeString(FILE_PATH, JSON.stringify(parsed, null, 2));\n      return parsed;\n    } catch (e) {\n      throw new Error(\"输入的配置不是有效 JSON，请重新运行脚本并输入正确格式。\");\n    }\n  } else {\n    const configStr = fm.readString(FILE_PATH);\n    return JSON.parse(configStr);\n  }\n}\n\nasync function fetchAPI(url, headers) {\n  const req = new Request(url);\n  req.headers = headers;\n  return req.loadJSON();\n}\n\nfunction formatColorByBattery(pct) {\n  if (pct >= 90) return Color.green();\n  if (pct >= 70) return new Color(\"#90ee90\");\n  if (pct >= 50) return new Color(\"#d0f06c\");\n  if (pct >= 30) return Color.orange();\n  if (pct >= 10) return new Color(\"#ff4500\");\n  return Color.red();\n}\n\nfunction getBatteryIcon(pct) {\n  return pct >= 30 ? \"🔋\" : \"🪫\";\n}\n\nfunction formatTime(hours) {\n  return `${Math.floor(hours)} 小时`;\n}\n\nfunction formatDateTime(date) {\n  const h = date.getHours();\n  const m = date.getMinutes();\n  return `${h}:${m.toString().padStart(2, \"0\")}`;\n}\n\nasync function main() {\n  const widget = new ListWidget();\n  widget.backgroundColor = new Color(\"#1A1A1A\");\n  widget.setPadding(10, 10, 10, 10);\n\n  try {\n    const config = await getUserConfig();\n    const code16 = config.code16;\n    const headers = config.headers;\n    const BASE_FULL_RANGE_KM = (typeof config.fullRangeKm === \"number\" && config.fullRangeKm > 0) ? config.fullRangeKm : 60;\n\n    const bikeData = await fetchAPI(`https:\/\/intelligence.luyuan.cn\/intelligence\/userBike\/fetch?code16=${code16}`, headers);\n    const bike = bikeData.data?.userbike ?? {};\n    const status = bikeData.data?.instructionStatus ?? {};\n    const bikeImage = bikeData.data?.bikeimage ?? {};\n\n    const tripData = await fetchAPI(`https:\/\/intelligence.luyuan.cn\/intelligence\/userBike\/tripStatistics\/v2?code16=${code16}`, headers);\n    const trip = tripData.data ?? {};\n\n    const locData = await fetchAPI(`https:\/\/intelligence.luyuan.cn\/intelligence\/userBike\/location?code16=${code16}`, headers);\n    const loc = locData.data ?? {};\n\n    const batteryData = await fetchAPI(`https:\/\/intelligence.luyuan.cn\/intelligence\/userBike\/battery\/V2?code16=${code16}`, headers);\n    const battery = batteryData.data ?? {};\n\n    const batteryPct = battery.electricquantitypct ?? \"未知\";\n    const batteryTemp = battery.batterytemperature ?? \"未知\";\n    const chargedTimes = battery.chargedtimes ?? \"未知\";\n    const mileage = trip.totalmilage ?? \"未知\";\n    const hours = trip.totaltooktime ?? 0;\n    const isLocked = status.defend === 1;\n\n    let estRange = \"未知\";\n    if (\n      trip.lastfullchargedmilage > 0 &&\n      trip.lastfullchargedpct > 0 &&\n      batteryPct !== \"未知\"\n    ) {\n      const usedPct = trip.lastfullchargedpct - batteryPct;\n      if (usedPct > 0) {\n        const kmPerPct = trip.lastfullchargedmilage \/ usedPct;\n        estRange = Math.floor(kmPerPct * batteryPct);\n      }\n    } else if (batteryPct !== \"未知\") {\n      estRange = Math.floor(batteryPct * BASE_FULL_RANGE_KM \/ 100);\n    }\n\n    let batteryHealth = \"良好\";\n    let batteryHealthColor = Color.green();\n\n    if (typeof estRange === \"number\" && estRange < BASE_FULL_RANGE_KM) {\n      const percent = estRange \/ BASE_FULL_RANGE_KM;\n      if (percent < 0.5) {\n        batteryHealth = \"严重衰减 ⚠️\";\n        batteryHealthColor = Color.red();\n      } else if (percent < 0.7) {\n        batteryHealth = \"中度衰减 ⚠️\";\n        batteryHealthColor = new Color(\"#ffa500\");\n      } else if (percent < 0.9) {\n        batteryHealth = \"轻度衰减\";\n        batteryHealthColor = new Color(\"#ffd700\");\n      }\n    }\n\n    const row = widget.addStack();\n    row.layoutHorizontally();\n    row.centerAlignContent();\n\n    const left = row.addStack();\n    left.layoutVertically();\n    left.spacing = 3;\n    left.size = new Size(170, 130);\n    left.bottomAlignContent();\n\n    const baseFont = 13;\n\n    const modelText = left.addText(`🛵 车型：${bike.model || \"未知\"}`);\n    modelText.font = Font.mediumSystemFont(baseFont * 1.5);\n    modelText.textColor = Color.white();\n\n    const lockText = left.addText(`⚙️ 状态：${isLocked ? \"🔒已设防\" : \"🔑未设防\"}`);\n    lockText.font = Font.systemFont(baseFont);\n    lockText.textColor = Color.white();\n\n    const rangeText = left.addText(`🛞 预估续航：${estRange === \"未知\" ? estRange : estRange + \" km\"}`);\n    rangeText.font = Font.systemFont(baseFont);\n    rangeText.textColor = Color.white();\n\n    const mileageText = left.addText(`🗺️ 总里程：${mileage} km`);\n    mileageText.font = Font.systemFont(baseFont);\n    mileageText.textColor = Color.white();\n\n    const timeText = left.addText(`⏱️ 总时间：${formatTime(hours)}`);\n    timeText.font = Font.systemFont(baseFont);\n    timeText.textColor = Color.white();\n\n    const right = row.addStack();\n    right.layoutVertically();\n    right.spacing = 2;\n    right.setPadding(0, -8, 0, 0);\n\n    if (bikeImage.bikeurl) {\n      try {\n        const reqImg = new Request(bikeImage.bikeurl);\n        const img = await reqImg.loadImage();\n        const imgView = right.addImage(img);\n        imgView.imageSize = new Size(85, 65);\n        imgView.centerAlignImage();\n      } catch {\n        right.addText(\"🚫 无图\").font = Font.systemFont(baseFont - 1);\n      }\n    }\n\n    const batteryIcon = getBatteryIcon(batteryPct);\n    const batteryColor = batteryPct !== \"未知\" ? formatColorByBattery(batteryPct) : Color.gray();\n\n    const batteryText = right.addText(`${batteryIcon} 剩余电量：${batteryPct !== \"未知\" ? batteryPct + \"%\" : \"未知\"}`);\n    batteryText.font = Font.systemFont(baseFont);\n    batteryText.textColor = batteryColor;\n    batteryText.leftAlignText();\n\n    const tempText = right.addText(`🌡️ 电池温度：${batteryTemp}℃`);\n    tempText.font = Font.systemFont(baseFont);\n    tempText.textColor = Color.white();\n    tempText.leftAlignText();\n\n    const chargeText = right.addText(`🔌 充电次数：${chargedTimes}`);\n    chargeText.font = Font.systemFont(baseFont);\n    chargeText.textColor = Color.white();\n    chargeText.leftAlignText();\n\n    const healthText = right.addText(`⚡ 电池健康：${batteryHealth}`);\n    healthText.font = Font.systemFont(baseFont);\n    healthText.textColor = batteryHealthColor;\n    healthText.leftAlignText();\n\n    widget.addSpacer(6);\n\n    const bottomLine = widget.addStack();\n    bottomLine.layoutHorizontally();\n\n    const location = loc.address ?? \"未知位置\";\n    const lat = loc.lat;\n    const lon = loc.lon;\n\n    const locText = bottomLine.addText(`📍 ${location}`);\n    locText.font = Font.systemFont(11);\n    locText.textColor = Color.gray();\n    locText.lineLimit = 1;\n    locText.minimumScaleFactor = 0.7;\n\n    bottomLine.addSpacer();\n\n    const timeStr = formatDateTime(new Date());\n    const dateText = bottomLine.addText(timeStr);\n    dateText.font = Font.systemFont(11);\n    dateText.textColor = Color.gray();\n\n    if (lat && lon) {\n      widget.url = `maps:\/\/?ll=${lat},${lon}`;\n    }\n\n    Script.setWidget(widget);\n  } catch (e) {\n    const w = new ListWidget();\n    w.addText(\"❌ 数据获取失败\").textColor = Color.red();\n    w.addText(String(e)).textColor = Color.gray();\n    Script.setWidget(w);\n  }\n\n  Script.complete();\n  if (!config.runsInWidget) await widget.presentMedium();\n}\n\nawait main();",
  "share_sheet_inputs" : [

  ]
}